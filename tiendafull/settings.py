"""
Django settings for tiendafull project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY_DJANGO'),

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG'),
# DEBUG = False

ALLOWED_HOSTS = []
# ALLOWED_HOSTS = ['127.0.0.1:8000',]


# Application definition

DEFAULTS_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
]
MY_APPS=[
    "InicioTiendaFull",
    "tienda",
    "blog",
    "usuarios",
    "dashboard",
    'carro',
    'multimedia',
]

THIRD = [
    'ckeditor',
]

INSTALLED_APPS=DEFAULTS_APPS + MY_APPS + THIRD

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tiendafull.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'carro.context_procesor.importe_total_carro',
            ],
        },
    },
]

WSGI_APPLICATION = 'tiendafull.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('BD_NAME'),
        'USER': config('BD_USER'),
        'PASSWORD': config('BD_PASSWORD'),
        'HOST': config('BD_HOST'),
        'PORT': config('BD_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# STATIC_URL = 'https://127.0.0.1:9000'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# para que las imagenes cargadas se guarden en esa direccion
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR ,'media')

# log configuraciones
# Para redireccionar las paginas
LOGIN_REDIRECT_URL= "/"
LOGOUT_REDIRECT_URL="/"

# ----
# # Personalizar los errores
# TEMPLATE_DIR = os.path.join(BASE_DIR, 'plantillas')

# S3 Configuration

STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
MINIO_STORAGE_MEDIA_BUCKET_NAME = config("MINIO_STORAGE_BUCKET_NAME")
DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# AWS_ACCESS_KEY_ID = os.environ.get("MINIO_ACCESS_KEY_ID", "user")
# AWS_SECRET_ACCESS_KEY = os.environ.get("MINIO_SECRET_ACCESS_KEY", "password")
# AWS_STORAGE_BUCKET_NAME = os.environ.get("MINIO_STORAGE_BUCKET_NAME", "static-2")
AWS_ACCESS_KEY_ID = config("MINIO_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = config("MINIO_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = config("MINIO_STORAGE_BUCKET_NAME")
AWS_S3_USE_SSL = False

if DEBUG:
    # cuando se este en desarrollo
    AWS_S3_ENDPOINT_URL = config("MINIO_API")
    
else:
    # cuando se este en producccion
    pass

